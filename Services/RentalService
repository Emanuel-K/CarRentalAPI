using CarRentalAPI.Models;
using Microsoft.Extensions.Options;
using MongoDB.Driver;

namespace CarRentalAPI.Services{
    public class RentalService : IRentalService
    {
        private readonly IMongoCollection<Rental> _rentals;
        private readonly IMongoCollection<Car> _cars;
        public RentalService(IOptions<MongoDBSettings> mongoDBSettings)
        {
            var mongoClient = new MongoClient(mongoDBSettings.Value.ConnectionString);
            var mongoDatabase = mongoClient.GetDatabase(mongoDBSettings.Value.DatabaseName);
            _rentals = mongoDatabase.GetCollection<Rental>("Rentals");
            _cars = mongoDatabase.GetCollection<Car>("Cars");}
        public async Task<List<Rental>> GetAsync()
        {
            var rentals = await _rentals.Find(_ => true).ToListAsync();
            foreach (var rental in rentals){
                var car = await _cars.Find(x => x.Id == rental.CarId).FirstOrDefaultAsync();
                if (car != null){
                    rental.CarMake = car.Make;
                    rental.CarModel = car.Model;
                    rental.CarYear = car.Year;
                }}
            return rentals;
            }
